# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Auto Deploy

on:
  push:
    branches:
      - main

jobs:
  push_to_registry:
    name: Push to NCP container registry
    runs-on: ubuntu-latest

    steps:
    # checkout
    - name: Checkout
    - uses: actions/checkout@v4

    # JDK setting
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'zulu'

    # secret yml file 생성
    - name: Set secret yml
      run: |
        mkdir -p src/main/resources
        echo "${{ secrets.DATABASE_YML }}" | base64 --decode > src/main/resources/application-database.yml
        echo "${{ secrets.NAVER_TOKEN_YML }}" | base64 --decode > src/main/resources/application-naver-token.yml
        echo "${{ secrets.SECURITY_YML }}" | base64 --decode > src/main/resources/application-security.yml
        find src
      shell: bash

    # Gradle 권한 부여
    - name: Grant permission for gradlew
      run: chmod +x ./gradlew
      
    # 테스트 없이 빌드
    - name: Build with Gradle
      run: ./gradlew clean build -x test
      
    # build jar 파일을 docker image로 build하고 docker hub에 push
    - name: Web docker build and push
      run: |
        docker login -u ${{ secrets.DOCKER_ACCESS_KEY }} -p ${{ secrets.DOCKER_SECRET_KEY }}
        docker build -t ${{ secrets.NCP_CONTAINER_REGISTRY }}/americanote .
        docker push ${{ secrets.NCP_CONTAINER_REGISTRY }}/americanote

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to NCP Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ secrets.NCP_CONTAINER_REGISTRY }}
        username: ${{ secrets.NCP_ACCESS_KEY }}
        password: ${{ secrets.NCP_SECRET_KEY }}

    - name: Build and push
      uses:  docker/build-push-action@v3
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.NCP_CONTAINER_REGISTRY }}/tag-name:latest
        cache-from: type=registry,ref=${{ secrets.NCP_CONTAINER_REGISTRY }}/tag-name:latest
        cache-to: type=inline
